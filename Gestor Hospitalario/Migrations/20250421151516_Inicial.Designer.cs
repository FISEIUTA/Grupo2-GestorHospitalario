// <auto-generated />
using System;
using Gestor_Hospitalario.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestor_Hospitalario.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20250421151516_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Gestor_Hospitalario.Models.CentroMedico", b =>
                {
                    b.Property<int>("CentroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CentroID"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CentroID");

                    b.ToTable("CentrosMedicos");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.ConsultaMedica", b =>
                {
                    b.Property<int>("ConsultaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ConsultaID"));

                    b.Property<int>("CentroID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time(6)");

                    b.Property<int>("MedicoID")
                        .HasColumnType("int");

                    b.Property<string>("PacienteApellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PacienteNombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ConsultaID");

                    b.HasIndex("CentroID");

                    b.HasIndex("MedicoID");

                    b.ToTable("ConsultasMedicas");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmpleadoID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cargo")
                        .HasColumnType("longtext");

                    b.Property<int>("CentroID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("EmpleadoID");

                    b.HasIndex("CentroID");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.Especialidad", b =>
                {
                    b.Property<int>("EspecialidadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EspecialidadID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("EspecialidadID");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.Medico", b =>
                {
                    b.Property<int>("MedicoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MedicoID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CentroID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("EspecialidadID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("MedicoID");

                    b.HasIndex("CentroID");

                    b.HasIndex("EspecialidadID");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.ConsultaMedica", b =>
                {
                    b.HasOne("Gestor_Hospitalario.Models.CentroMedico", "CentroMedico")
                        .WithMany("ConsultasMedicas")
                        .HasForeignKey("CentroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestor_Hospitalario.Models.Medico", "Medico")
                        .WithMany("ConsultasMedicas")
                        .HasForeignKey("MedicoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroMedico");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.Empleado", b =>
                {
                    b.HasOne("Gestor_Hospitalario.Models.CentroMedico", "CentroMedico")
                        .WithMany("Empleados")
                        .HasForeignKey("CentroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroMedico");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.Medico", b =>
                {
                    b.HasOne("Gestor_Hospitalario.Models.CentroMedico", "CentroMedico")
                        .WithMany("Medicos")
                        .HasForeignKey("CentroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gestor_Hospitalario.Models.Especialidad", "Especialidad")
                        .WithMany("Medicos")
                        .HasForeignKey("EspecialidadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CentroMedico");

                    b.Navigation("Especialidad");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.CentroMedico", b =>
                {
                    b.Navigation("ConsultasMedicas");

                    b.Navigation("Empleados");

                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.Especialidad", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("Gestor_Hospitalario.Models.Medico", b =>
                {
                    b.Navigation("ConsultasMedicas");
                });
#pragma warning restore 612, 618
        }
    }
}
